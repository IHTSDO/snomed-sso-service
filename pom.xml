<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.snomed</groupId>
        <artifactId>snomed-parent-bom</artifactId>
        <version>3.7.0-SNAPSHOT</version>
    </parent>

    <artifactId>snomed-sso-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>IHTSDO Identity Management Service</name>
    <description>snomed-sso-service</description>
    <packaging>jar</packaging>

    <url>https://www.ihtsdo.org/</url>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <organization>
        <name>IHTSDO</name>
        <url>https://www.ihtsdo.org/</url>
    </organization>

    <scm>
        <connection>scm:git:git://github.com/IHTSDO/snomed-sso-service.git</connection>
        <url>https://github.com/IHTSDO/snomed-sso-service.git</url>
    </scm>

    <properties>
        <execFinalName>${project.build.finalName}.jar</execFinalName>
        <packageName>${project.artifactId}</packageName>
        <docker.registry>docker.io</docker.registry>
        <docker.allowInsecureRegistries>false</docker.allowInsecureRegistries>
        <docker.image.prefix>snomedinternational</docker.image.prefix>
        <docker.image.tag>latest</docker.image.tag>
        <docker.base-image>amazoncorretto:17</docker.base-image>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-discovery</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-vault-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <classifier>jakarta</classifier>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-spring</artifactId>
            <version>2.3-groovy-4.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>snomed-sso-service</finalName>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/*.xml</exclude>
                </excludes>
            </resource>
            <resource>
                <filtering>true</filtering>
                <directory>${project.build.directory}/generated-resources</directory>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>
                    <container>
                        <labels>
                            <author>SNOMED International &lt;tooling@snomed.org&gt;</author>
                        </labels>
                        <mainClass>org.snomed.ssoservice.Application</mainClass>
                        <environment>
                            <application.title>${project.name}</application.title>
                            <application.version>${project.version}</application.version>
                        </environment>
                        <jvmFlags>
                            <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
                            <jvmFlag>--add-opens=java.base/java.lang=ALL-UNNAMED</jvmFlag>
                        </jvmFlags>
                        <ports>
                            <port>8080</port>
                        </ports>
                        <volumes>
                            <volume>/tmp</volume>
                        </volumes>
                        <workingDirectory>/app</workingDirectory>
                    </container>
                    <extraDirectories>
                        <permissions>
                            <permission>
                                <file>/snomed-drools-rules</file>
                                <mode>757</mode>
                            </permission>
                        </permissions>
                    </extraDirectories>
                    <from>
                        <image>${docker.base-image}</image>
                        <platforms>
                            <platform>
                                <architecture>arm64</architecture>
                                <os>linux</os>
                            </platform>
                            <platform>
                                <architecture>amd64</architecture>
                                <os>linux</os>
                            </platform>
                        </platforms>
                    </from>
                    <to>
                        <image>${docker.registry}/${docker.image.prefix}/${project.artifactId}</image>
                        <tags>
                            <tag>${docker.image.tag}</tag>
                            <tag>${project.version}</tag>
                        </tags>
                    </to>
                    <allowInsecureRegistries>${docker.allowInsecureRegistries}</allowInsecureRegistries>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <!-- By default, only files ending in 'Test' will be included, so also include support for Spock style naming convention. -->
                        <!-- Oddly enough for Groovy files, *Spec.groovy does not work, but *Spec.java does. -->
                        <include>**/*Test.java</include>
                        <include>**/*Spec.java</include>
                    </includes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>deb</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.vafer</groupId>
                        <artifactId>jdeb</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jdeb</goal>
                                </goals>
                                <configuration>
                                    <deb>${project.build.directory}/${packageName}-${project.version}-all.deb</deb>
                                    <controlDir>${basedir}/src/deb/control</controlDir>
                                    <snapshotExpand>true</snapshotExpand>
                                    <snapshotEnv>BUILD_NUMBER</snapshotEnv>
                                    <verbose>true</verbose>
                                    <classifier>all</classifier>
                                    <signPackage>false</signPackage>
                                    <dataSet>
                                        <data>
                                            <src>${project.build.directory}/${project.build.finalName}.jar</src>
                                            <dst>${packageName}.jar</dst>
                                            <type>file</type>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/opt/${packageName}/</prefix>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>${basedir}/src/deb/supervisor.conf</src>
                                            <dst>/etc/supervisor/conf.d/${packageName}.conf</dst>
                                            <type>file</type>
                                        </data>
                                    </dataSet>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
